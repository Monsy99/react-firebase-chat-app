{"version":3,"sources":["components/Menu/styled.js","components/Menu/index.js","components/ChatRoom/styled.js","components/ChatRoom/index.js","components/Default/styled.js","components/Default/index.js","components/Navigation/styled.js","components/Button/styled.js","components/Button/index.js","components/SignOut/index.js","components/SignIn/index.js","components/Navigation/index.js","App.js","globalStyle.js","index.js"],"names":["Container","styled","div","StyledLink","Link","Room","Menu","auth","firestore","db","roomRef","useParams","chatroomsRef","collection","useCollectionData","chatrooms","doc","messages","useState","input","setInput","currentRoom","find","chatroom","ref","messagesRef","console","log","addMessage","a","add","value","onSubmit","e","preventDefault","nanoid","trim","set","createdAt","FieldValue","serverTimestamp","title","creator","currentUser","uid","private","placeholder","onChange","target","onClick","X","map","to","Wrapper","section","MessagesList","ul","Message","li","isAuthor","AuthorAvatar","img","MessageText","p","MessageTime","MessageForm","form","FormInput","FormSubmit","button","ChatRoom","firebase","getMessagesByTime","orderBy","useEffect","dummy","current","scrollIntoView","behavior","onFormSubmit","photoURL","text","useRef","currentUserId","message","className","id","alt","src","Date","seconds","toLocaleTimeString","toLocaleDateString","GridContainer","Default","useAuthState","user","NavBar","nav","Logo","h1","Button","children","SignOut","signOut","SignIn","provider","GoogleAuthProvider","signInWithPopup","Navigation","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","path","exact","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fdcaa33.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Container = styled.div`\r\n  border-right: 1px solid rgba(255, 255, 255, 0.6);\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: #ccc;\r\n  width: 100%;\r\n`;\r\nconst Room = styled.div`\r\n  width: 100%;\r\n  padding: 4px 12px;\r\n  border-bottom: 1px solid #eee;\r\n`;\r\n\r\nexport { Container, StyledLink, Room };\r\n","import { nanoid } from \"nanoid\";\r\nimport { useState } from \"react\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Container, Room, StyledLink } from \"./styled\";\r\n\r\nconst Menu = ({ auth, firestore, db }) => {\r\n  const { roomRef } = useParams();\r\n  const chatroomsRef = firestore.collection(\"chatrooms\");\r\n  const [chatrooms] = useCollectionData(chatroomsRef);\r\n  const [messages] = useCollectionData(\r\n    chatroomsRef.doc(roomRef).collection(\"messages\")\r\n  );\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const currentRoom = chatrooms\r\n    ? chatrooms.find((chatroom) => roomRef === chatroom.ref)\r\n    : null;\r\n  const messagesRef = chatroomsRef.doc(roomRef).collection(\"messages\");\r\n  console.log(messages);\r\n\r\n  const addMessage = async () => {\r\n    await messagesRef.add({ value: \"siemka\" });\r\n  };\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const ref = nanoid();\r\n    try {\r\n      if (input.trim() !== \"\") {\r\n        chatroomsRef.doc(ref).set({\r\n          createdAt: db.firestore.FieldValue.serverTimestamp(),\r\n          title: input,\r\n          creator: auth.currentUser.uid,\r\n          ref: ref,\r\n          private: false,\r\n          messages: [],\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  const onInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n  const logStatus = () => {\r\n    console.log(\"chatrooms: \", chatrooms);\r\n    console.log(\"user:\", auth.X);\r\n    console.log(\"parameters:\", roomRef);\r\n    console.log(\"current room:\", currentRoom);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <p>Formularz do dodawania czatów do wyrzucenia do popup'u</p>\r\n      <form onSubmit={onFormSubmit}>\r\n        <input\r\n          placeholder=\"Tytuł czatu\"\r\n          value={input}\r\n          onChange={onInputChange}\r\n        ></input>\r\n        <button>submit</button>\r\n      </form>\r\n      <button onClick={logStatus}>Log status</button>\r\n      <button onClick={addMessage}>Siemka Button</button>\r\n      {chatrooms\r\n        ? chatrooms.map((chatroom) => (\r\n            <Room key={`${chatroom.ref}`}>\r\n              <StyledLink to={`/${chatroom.ref}`}>\r\n                <header>{chatroom.title}</header>\r\n              </StyledLink>\r\n            </Room>\r\n          ))\r\n        : \"\"}\r\n    </Container>\r\n  );\r\n};\r\nexport default Menu;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.section`\r\n  width: 100%;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  margin-bottom: 60px;\r\n`;\r\n\r\nconst MessagesList = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0px;\r\n  padding: 16px;\r\n`;\r\nconst Message = styled.li`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  margin: 8px 0;\r\n  flex-direction: ${({ isAuthor }) => (isAuthor ? \"row-reverse\" : \"unset\")};\r\n`;\r\nconst AuthorAvatar = styled.img`\r\n  width: 45px;\r\n  border-radius: 50%;\r\n  align-self: flex-start;\r\n`;\r\nconst MessageText = styled.p`\r\n  font-size: 18px;\r\n  background-color: #444;\r\n  padding: 8px 12px;\r\n  margin: 0 8px;\r\n  border-radius: 10px;\r\n`;\r\nconst MessageTime = styled.div`\r\n  font-size: 14px;\r\n  text-align: center;\r\n  flex-grow: 0;\r\n  color: #ccc;\r\n  margin: 0 8px;\r\n`;\r\nconst MessageForm = styled.form`\r\n  width: calc(100% - 300px);\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n  position: fixed;\r\n  bottom: 0;\r\n`;\r\nconst FormInput = styled.input`\r\n  font-family: \"Roboto\", sans-serif;\r\n  padding: 12px;\r\n  flex-grow: 1;\r\n  font-size: 16px;\r\n  color: #ddd;\r\n  background-color: #222;\r\n  border-radius: 0;\r\n  border: none;\r\n  &::placeholder {\r\n  }\r\n  &:focus {\r\n    border: none;\r\n    outline: none;\r\n    background-color: #333;\r\n  }\r\n`;\r\nconst FormSubmit = styled.button`\r\n  padding: 12px 20px;\r\n  font-size: 26px;\r\n  background-color: #333;\r\n  border: none;\r\n  color: white;\r\n`;\r\nexport {\r\n  FormSubmit,\r\n  FormInput,\r\n  Wrapper,\r\n  MessagesList,\r\n  AuthorAvatar,\r\n  Message,\r\n  MessageText,\r\n  MessageTime,\r\n  MessageForm,\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport {\r\n  AuthorAvatar,\r\n  FormSubmit,\r\n  FormInput,\r\n  Message,\r\n  MessageForm,\r\n  MessagesList,\r\n  MessageText,\r\n  MessageTime,\r\n  Wrapper,\r\n} from \"./styled\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst ChatRoom = ({ firebase }) => {\r\n  const firestore = firebase.firestore();\r\n  const auth = firebase.auth();\r\n  const { roomRef } = useParams();\r\n  const chatroomsRef = firestore.collection(\"chatrooms\");\r\n  const messagesRef = chatroomsRef.doc(roomRef).collection(\"messages\");\r\n  const [chatrooms] = useCollectionData(chatroomsRef);\r\n  const getMessagesByTime = messagesRef.orderBy(\"createdAt\");\r\n  const [messages] = useCollectionData(getMessagesByTime);\r\n  const currentRoom = chatrooms\r\n    ? chatrooms.find((chatroom) => roomRef === chatroom.ref)\r\n    : null;\r\n\r\n  // ----------------------------------------------------\r\n\r\n  const [input, setInput] = useState(\"\");\r\n  const onInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n  useEffect(() => {\r\n    if (!!dummy.current) {\r\n      dummy.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [messages]);\r\n  const onFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { uid, photoURL } = auth.currentUser;\r\n    if (input.trim() !== \"\") {\r\n      await messagesRef.add({\r\n        text: input,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        uid,\r\n        photoURL,\r\n      });\r\n      setInput(\"\");\r\n    }\r\n    if (!!dummy.current) {\r\n      dummy.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n  const dummy = useRef();\r\n  const currentUserId = auth.currentUser ? auth.currentUser.uid : null;\r\n  return (\r\n    <Wrapper>\r\n      {auth && (\r\n        <>\r\n          <MessagesList>\r\n            {messages &&\r\n              messages.map((message) => (\r\n                <Message\r\n                  isAuthor={message.uid === currentUserId}\r\n                  key={nanoid()}\r\n                  className={message.id}\r\n                >\r\n                  <AuthorAvatar\r\n                    alt={\"avatar\"}\r\n                    src={message.photoURL}\r\n                  ></AuthorAvatar>\r\n                  <MessageText>{message.text}</MessageText>\r\n                  <MessageTime>\r\n                    {message.createdAt\r\n                      ? `${new Date(\r\n                          message.createdAt.seconds * 1000\r\n                        ).toLocaleTimeString()}\r\n                     ${new Date(\r\n                       message.createdAt.seconds * 1000\r\n                     ).toLocaleDateString()}`\r\n                      : ``}\r\n                  </MessageTime>\r\n                </Message>\r\n              ))}\r\n            <div ref={dummy}></div>\r\n          </MessagesList>\r\n          <MessageForm onSubmit={onFormSubmit}>\r\n            <FormInput\r\n              placeholder={\"Write a message here\"}\r\n              value={input}\r\n              onChange={onInputChange}\r\n            />\r\n            <FormSubmit>⬆️</FormSubmit>\r\n          </MessageForm>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default ChatRoom;\r\n","import styled from \"styled-components\";\r\n\r\nconst GridContainer = styled.div`\r\n  display: grid;\r\n  width: 100%;\r\n  grid-template-columns: 300px 1fr;\r\n`;\r\n\r\nexport { GridContainer };\r\n","import Menu from \"../Menu\";\r\nimport ChatRoom from \"../ChatRoom\";\r\n\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { GridContainer } from \"./styled\";\r\n\r\nconst Default = ({ firebase }) => {\r\n  const firestore = firebase.firestore();\r\n  const auth = firebase.auth();\r\n  const [user] = useAuthState(auth);\r\n  return (\r\n    <>\r\n      <GridContainer>\r\n        <Menu db={firebase} firestore={firestore} auth={auth}></Menu>\r\n        {user ? (\r\n          <ChatRoom firebase={firebase} firestore={firestore} auth={auth} />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </GridContainer>\r\n    </>\r\n  );\r\n};\r\nexport default Default;\r\n","import styled from \"styled-components\";\r\n\r\nconst NavBar = styled.nav`\r\n  width: 100%;\r\n  max-width: 1200px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 0 auto;\r\n  box-shadow: 0 0px 5px rgba(255, 255, 255, 0.6);\r\n`;\r\nconst Logo = styled.h1`\r\n  margin: 0 12px;\r\n  font-family: \"Sansita Swashed\", cursive;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  color: #eee;\r\n  padding: 12px;\r\n`;\r\n\r\nexport { NavBar, Logo };\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.button`\r\n  background-color: blue;\r\n  outline: none;\r\n  color: white;\r\n  font-size: 18px;\r\n  padding: 10px 20px;\r\n  margin-right: 12px;\r\n  border: none;\r\n  border-radius: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport StyledButton from \"./styled\";\r\n\r\nconst Button = ({ children, onClick }) => {\r\n  return <StyledButton onClick={onClick}>{children}</StyledButton>;\r\n};\r\nexport default Button;\r\n","import React from \"react\";\r\nimport \"firebase/auth\";\r\nimport Button from \"../Button\";\r\n\r\nconst SignOut = ({ auth }) => {\r\n  return (\r\n    auth.currentUser && <Button onClick={() => auth.signOut()}>Sign out</Button>\r\n  );\r\n};\r\nexport default SignOut;\r\n","import React from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport Button from \"../Button\";\r\n\r\nconst SignIn = ({ auth }) => {\r\n  const signInWithGoogle = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    auth.signInWithPopup(provider);\r\n  };\r\n  return <Button onClick={signInWithGoogle}>Sign in with Google</Button>;\r\n};\r\nexport default SignIn;\r\n","import React, { useEffect } from \"react\";\r\nimport { NavBar, Logo } from \"./styled.js\";\r\nimport SignOut from \"../SignOut\";\r\nimport SignIn from \"../SignIn\";\r\n\r\nconst Navigation = ({ firebase }) => {\r\n  const auth = firebase.auth();\r\n  useEffect(() => {}, [auth.currentUser]);\r\n  console.log(auth.currentUser);\r\n  return (\r\n    <NavBar>\r\n      <Logo>Chat App</Logo>\r\n      {auth.currentUser ? <SignOut auth={auth} /> : <SignIn auth={auth} />}\r\n    </NavBar>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport Default from \"./components/Default\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport ChatRoom from \"./components/ChatRoom\";\r\nimport Navigation from \"./components/Navigation\";\r\n\r\nfirebase.initializeApp({\r\n  apiKey: \"AIzaSyDWBkQjdvZjHIpip9Z1bm9IpDmzc1XxQmM\",\r\n  authDomain: \"react-firebase-chat-app-505e9.firebaseapp.com\",\r\n  databaseURL: \"https://react-firebase-chat-app-505e9.firebaseio.com\",\r\n  projectId: \"react-firebase-chat-app-505e9\",\r\n  storageBucket: \"react-firebase-chat-app-505e9.appspot.com\",\r\n  messagingSenderId: \"56873190707\",\r\n  appId: \"1:56873190707:web:ae292904dd7bcdb7542a46\",\r\n  measurementId: \"G-NKK3HT6H63\",\r\n});\r\n\r\nfunction App() {\r\n  const auth = firebase ? firebase.auth() : null;\r\n  return (\r\n    <HashRouter>\r\n      <Route path={`/:roomRef`}>\r\n        <Navigation firebase={firebase}></Navigation>\r\n        <Default firebase={firebase}></Default>\r\n      </Route>\r\n      <Route path=\"/\" exact>\r\n        <Default firebase={firebase}></Default>\r\n      </Route>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    *,*::before,*::after{\r\n    box-sizing:border-box;\r\n    }\r\n    body {\r\n    margin: 0;\r\n    color: white;\r\n    background-color: black;\r\n    font-family: 'Roboto', sans-serif;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport GlobalStyle from \"./globalStyle\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalStyle />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}