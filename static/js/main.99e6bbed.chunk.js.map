{"version":3,"sources":["components/ChatRoom/styled.js","components/ChatRoom/index.js","components/Navigation/styled.js","components/Button/styled.js","components/Button/index.js","components/SignOut/index.js","components/SignIn/index.js","components/Navigation/index.js","App.js","globalStyle.js","index.js"],"names":["Wrapper","styled","section","MessagesList","ul","Message","li","isAuthor","AuthorAvatar","img","MessageText","p","MessageTime","div","MessageForm","form","FormInput","input","FormSubmit","button","ChatRoom","firebase","firestore","auth","messagesRef","collection","getMessagesByTime","orderBy","useCollectionData","messages","useState","setInput","useEffect","onFormSubmit","e","a","preventDefault","currentUser","uid","photoURL","trim","add","text","createdAt","FieldValue","serverTimestamp","dummy","current","scrollIntoView","behavior","useRef","currentUserId","map","message","className","id","alt","src","Date","seconds","toLocaleTimeString","toLocaleDateString","nanoid","ref","onSubmit","placeholder","value","onChange","target","NavBar","nav","Logo","h1","Button","children","onClick","SignOut","signOut","SignIn","provider","GoogleAuthProvider","signInWithPopup","Navigation","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","useAuthState","user","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99e6bbed.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.section`\r\nwidth:100vw;\r\nmax-width:1200px;\r\nmargin: 0 auto;\r\nmargin-bottom:60px;\r\n`;\r\n\r\nconst MessagesList = styled.ul`\r\nlist-style: none;\r\ndisplay:flex;\r\nflex-direction:column;\r\nmargin: 0px;\r\npadding:16px;\r\n`;\r\nconst Message = styled.li`\r\ndisplay: flex;\r\nwidth: 100%;\r\nalign-items:center;\r\nmargin:8px 0;\r\nflex-direction:${({isAuthor}) => isAuthor ? \"row-reverse\" : \"unset\" };\r\n`;\r\nconst AuthorAvatar = styled.img`\r\nwidth:45px;\r\nborder-radius:50%;\r\nalign-self:flex-start;\r\n`;\r\nconst MessageText = styled.p`\r\nfont-size:18px;\r\nbackground-color: #444;\r\npadding: 8px 12px;\r\nmargin: 0 8px;\r\nborder-radius:10px;\r\n`;\r\nconst MessageTime = styled.div`\r\nfont-size:14px;\r\ntext-align:center;\r\nflex-grow:0;\r\ncolor:#ccc;\r\nmargin: 0 8px;\r\n`;\r\nconst MessageForm = styled.form`\r\nwidth:100%;\r\nmax-width:1200px;\r\nmargin:0;\r\npadding:0;\r\ndisplay:grid;\r\ngrid-template-columns:1fr auto;\r\nposition:fixed;\r\nbottom:0;\r\n`;\r\nconst FormInput = styled.input`\r\nfont-family: \"Roboto\", sans-serif;\r\npadding:12px;\r\nfont-size:16px;\r\ncolor: #ddd;\r\nbackground-color: #222;\r\nborder-radius:0;\r\nborder:none;\r\n&::placeholder{\r\n}\r\n&:focus{\r\n    border:none;\r\n    outline:none;\r\n    background-color: #333;\r\n}\r\n`;\r\nconst FormSubmit = styled.button`\r\npadding:12px 20px;\r\nfont-size:26px;\r\nbackground-color: #333;\r\nborder:none;\r\ncolor:white;\r\n`;\r\n;\r\n\r\nexport { FormSubmit, FormInput, Wrapper, MessagesList, AuthorAvatar, Message, MessageText, MessageTime, MessageForm };\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport { AuthorAvatar, FormSubmit, FormInput, Message, MessageForm, MessagesList, MessageText, MessageTime, Wrapper } from \"./styled\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nconst ChatRoom = ({ firebase, firestore, auth }) => {\r\n    const messagesRef = firestore.collection('messages');\r\n    const getMessagesByTime = messagesRef.orderBy('createdAt');\r\n    const [messages] = useCollectionData(getMessagesByTime);\r\n\r\n    const [input,setInput] = useState('');\r\n    const onInputChange = (e) => {\r\n        setInput(e.target.value);\r\n    }\r\n    useEffect(() => {\r\n    },[messages])\r\n    const onFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const { uid, photoURL } = auth.currentUser;\r\n        if(input.trim() !== \"\")\r\n        {await messagesRef.add(\r\n            {\r\n                text: input,\r\n                createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n                uid,\r\n                photoURL,\r\n            }\r\n        )\r\n        setInput('');\r\n        }\r\n        if(!!dummy.current){\r\n        dummy.current.scrollIntoView({ behavior: 'smooth' })\r\n        }\r\n    }\r\n    const dummy = useRef();\r\n    const currentUserId = auth.currentUser.uid;\r\n    return (\r\n        <Wrapper>\r\n            <MessagesList>\r\n                { messages && messages.map( message => <Message isAuthor={message.uid === currentUserId} key={nanoid()} className={message.id}>\r\n                <AuthorAvatar alt={\"avatar\"} src={message.photoURL}></AuthorAvatar>\r\n                <MessageText>\r\n                {message.text}\r\n                </MessageText>\r\n                <MessageTime>\r\n                    {message.createdAt ? `${new Date(message.createdAt.seconds * 1000).toLocaleTimeString()}\r\n                     ${new Date(message.createdAt.seconds * 1000).toLocaleDateString()}` : ``}\r\n                </MessageTime>\r\n                </Message>) }\r\n                <div ref={dummy}></div>\r\n            </MessagesList>\r\n            <MessageForm onSubmit={onFormSubmit}>\r\n                <FormInput placeholder={\"Write a message here\"} value={input} onChange={onInputChange}/>\r\n                <FormSubmit>⬆️</FormSubmit>\r\n            </MessageForm>\r\n        </Wrapper>\r\n    );\r\n}\r\nexport default ChatRoom;","import styled from \"styled-components\";\r\n\r\nconst NavBar = styled.nav`\r\n    width:100%;\r\n    max-width:1200px;\r\n    display: flex;\r\n    align-items:center;\r\n    justify-content:space-between;\r\n    margin: 0 auto;\r\n`;\r\nconst Logo = styled.h1`\r\nmargin: 0 12px;\r\nfont-family: 'Sansita Swashed', cursive;\r\nfont-size: 28px;\r\nfont-weight:bold;\r\ncolor:#eee;\r\npadding: 12px;\r\n`;\r\n\r\nexport {NavBar, Logo}","import styled from \"styled-components\"\r\n\r\nexport default  styled.button`\r\n    background-color: blue;\r\n    outline: none;\r\n    color: white;\r\n    font-size: 18px;\r\n    padding:10px 20px;\r\n    border: none;\r\n    border-radius:10px;\r\n`;","import React from \"react\";\r\nimport StyledButton from \"./styled\";\r\n\r\nconst Button = ({children, onClick}) => {\r\n    return <StyledButton onClick={onClick}>\r\n                {children}\r\n            </StyledButton>\r\n}\r\nexport default Button;","import React from \"react\";\r\nimport 'firebase/auth';\r\nimport Button from \"../Button\"\r\n\r\nconst SignOut = ({auth}) => {\r\n    return auth.currentUser && (\r\n        <Button onClick={() => auth.signOut()}>Sign out</Button>\r\n    )\r\n}\r\nexport default SignOut;","import React from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport Button from \"../Button\";\r\n\r\nconst SignIn = ({auth}) => {\r\n    const signInWithGoogle = () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        auth.signInWithPopup(provider);\r\n    } \r\n    return (\r\n        <Button onClick={signInWithGoogle}>Sign in with Google</Button>\r\n    )\r\n}\r\nexport default SignIn;","import React from \"react\";\r\nimport { NavBar, Logo } from \"./styled.js\";\r\nimport SignOut from \"../SignOut\";\r\nimport SignIn from \"../SignIn\";\r\n\r\nconst Navigation = ({auth}) => {\r\n    return(\r\n        <NavBar>\r\n            <Logo>Chat App</Logo>\r\n            {auth.currentUser ? <SignOut auth={auth}/> : <SignIn auth={auth}/>}\r\n        </NavBar>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import ChatRoom from \"./components/ChatRoom\"\r\nimport firebase from \"firebase/app\";\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport Navigation from \"./components/Navigation\";\r\n\r\n\r\nfirebase.initializeApp({\r\n  apiKey: \"AIzaSyDWBkQjdvZjHIpip9Z1bm9IpDmzc1XxQmM\",\r\n  authDomain: \"react-firebase-chat-app-505e9.firebaseapp.com\",\r\n  databaseURL: \"https://react-firebase-chat-app-505e9.firebaseio.com\",\r\n  projectId: \"react-firebase-chat-app-505e9\",\r\n  storageBucket: \"react-firebase-chat-app-505e9.appspot.com\",\r\n  messagingSenderId: \"56873190707\",\r\n  appId: \"1:56873190707:web:ae292904dd7bcdb7542a46\",\r\n  measurementId: \"G-NKK3HT6H63\"\r\n});\r\n\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\n\r\nfunction App() {\r\n  const [user] = useAuthState(auth);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navigation auth={auth}></Navigation>\r\n      {user ? <ChatRoom firebase={firebase} firestore={firestore} auth={auth}/> : \"\"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {createGlobalStyle} from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    *,*::before,*::after{\r\n    box-sizing:border-box;\r\n    }\r\n    body {\r\n    margin: 0;\r\n    color: white;\r\n    background-color: black;\r\n    font-family: 'Roboto', sans-serif;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport GlobalStyle from './globalStyle';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle/>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}