{"version":3,"sources":["components/Navigation/styled.js","components/Button/index.js","userSlice.js","components/SignOut/index.js","components/SignIn/index.js","components/Wrapper/index.js","components/Navigation/index.js","components/LoginPage/LoginPropmt/styled.js","components/LoginPage/LoginPropmt/index.js","components/LoginPage/index.js","components/Menu/styled.js","components/Menu/generateChatroom.js","components/Menu/index.js","components/ChatRoom/styled.js","components/ChatRoom/generateInitialMessage.js","components/ChatRoom/generateMessage.js","components/ChatRoom/index.js","components/RoomPage/styled.js","components/RoomPage/index.js","App.js","globalStyle.js","theme.js","store.js","index.js"],"names":["NavBar","styled","nav","theme","color","thunder","midGray","NavigationContainer","section","Logo","Link","white","Button","button","buttonBorder","props","marginTop","css","plain","charade","userSlice","createSlice","name","initialState","loading","user","error","reducers","getUser","state","setUser","payload","userInfo","getUserError","setTestUser","uid","photoURL","displayName","resetUser","selectUser","selectUserState","actions","SignOut","auth","dispatch","useDispatch","currentUser","onClick","signOut","setTimeout","SignIn","provider","firebase","GoogleAuthProvider","signInWithPopup","Wrapper","div","Navigation","useAuthState","to","Container","shark","Header","h2","LoginPrompt","p","LoginPage","useSelector","header","ChatroomsContainer","Room","generateChatroom","chatroom","currentUserId","members","some","item","private","ref","title","Menu","firestore","storeUser","roomRef","useParams","chatroomsRef","collection","useCollectionData","chatrooms","useState","titleInput","setTitleInput","find","onSubmit","e","preventDefault","nanoid","trim","doc","set","createdAt","FieldValue","serverTimestamp","creator","console","log","placeholder","value","onChange","target","map","RelativeDiv","MessagesList","ul","Message","li","isAuthor","MessageAuthorName","AuthorAvatar","img","MessageText","MessageTime","MessageForm","form","FormInput","input","FormSubmit","generateInitialMessage","currentRoom","text","generateMessage","message","authorName","alt","src","Date","seconds","toLocaleTimeString","toLocaleDateString","id","ChatRoom","messagesRef","getMessagesByTime","orderBy","messages","initialMessage","dummy","useRef","setInput","useEffect","current","scrollIntoView","behavior","onFormSubmit","a","add","length","GridContainer","RoomPage","db","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","path","GlobalStyle","createGlobalStyle","woodsmoke","rootReducer","combineReducers","userReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b1923b9.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = styled.nav`\r\n  background-color: ${({ theme }) => theme.color.thunder};\r\n  border-bottom: 2px solid ${({ theme }) => theme.color.midGray};\r\n`;\r\nconst NavigationContainer = styled.section`\r\n  display: flex;\r\n  padding: 10px 0;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\nconst Logo = styled(Link)`\r\n  margin: 0;\r\n  font-family: \"Sansita Swashed\", cursive;\r\n  font-size: 24px;\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n  color: ${({ theme }) => theme.color.white};\r\n`;\r\n\r\nexport { NavBar, Logo, NavigationContainer };\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  background-color: transparent;\r\n  color: ${({ theme }) => theme.color.white};\r\n  font-size: 16px;\r\n  line-height: 130%;\r\n  padding: 12px 22px;\r\n  border: 2px solid ${({ theme }) => theme.color.buttonBorder};\r\n  border-radius: 15px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.color.buttonBorder};\r\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n  }\r\n  ${(props) =>\r\n    props.marginTop &&\r\n    css`\r\n      margin-top: 24px;\r\n    `}\r\n  ${(props) =>\r\n    props.plain &&\r\n    css`\r\n      padding: 12px 22px;\r\n      color: ${({ theme }) => theme.color.white};\r\n      border: none;\r\n      background-color: ${({ theme }) => theme.color.charade};\r\n      &:hover {\r\n        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n      }\r\n    `}\r\n`;\r\n\r\nexport default Button;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    loading: null,\r\n    user: null,\r\n    error: false,\r\n  },\r\n  reducers: {\r\n    getUser: (state) => {\r\n      state.loading = true;\r\n    },\r\n    setUser: (state, { payload }) => {\r\n      state.user = payload.userInfo;\r\n      state.loading = false;\r\n    },\r\n    getUserError: (state) => {\r\n      state.error = true;\r\n      state.loading = true;\r\n    },\r\n    setTestUser: (state) => {\r\n      state.user = {\r\n        uid: \"testUser\",\r\n        photoURL: \"https://www.practicepte.com/images/clients/avatar_man.jpg\",\r\n        displayName: \"Test User\",\r\n      };\r\n      state.loading = false;\r\n    },\r\n    resetUser: (state) => {\r\n      state.user = null;\r\n      state.error = null;\r\n      state.loading = null;\r\n    },\r\n  },\r\n});\r\n\r\nconst selectUserState = (state) => state.user;\r\nconst selectUser = (state) => selectUserState(state).user;\r\nexport { selectUserState, selectUser };\r\nexport const {\r\n  getUser,\r\n  setUser,\r\n  getUserError,\r\n  setTestUser,\r\n  resetUser,\r\n} = userSlice.actions;\r\nexport default userSlice.reducer;\r\n","import React from \"react\";\r\nimport \"firebase/auth\";\r\nimport Button from \"../Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { resetUser } from \"../../userSlice\";\r\n\r\nconst SignOut = ({ auth }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    auth.currentUser && (\r\n      <Button\r\n        onClick={() => {\r\n          auth.signOut();\r\n          setTimeout(() => {\r\n            dispatch(resetUser());\r\n          }, 1000);\r\n          // the setTimeout is here so that the signOut can complete before reseting the user\r\n          // otherwise the google auth is still signed in and triggers setting user\r\n        }}\r\n      >\r\n        Sign out\r\n      </Button>\r\n    )\r\n  );\r\n};\r\nexport default SignOut;\r\n","import React from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport Button from \"../Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { resetUser } from \"../../userSlice\";\r\n\r\nconst SignIn = ({ auth }) => {\r\n  const dispatch = useDispatch();\r\n  const signInWithGoogle = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    dispatch(resetUser());\r\n    auth.signInWithPopup(provider);\r\n  };\r\n  return <Button onClick={signInWithGoogle}>Sign in with Google</Button>;\r\n};\r\nexport default SignIn;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 1220px;\r\n  @media (max-width: 1220px) {\r\n    width: calc(100%-32px);\r\n    margin: 0 16px;\r\n  } ;\r\n`;\r\nexport { Wrapper };\r\n","import React from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport { NavBar, Logo, NavigationContainer } from \"./styled.js\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport SignOut from \"../SignOut\";\r\nimport SignIn from \"../SignIn\";\r\nimport { Wrapper } from \"../Wrapper/index.js\";\r\n\r\nconst Navigation = () => {\r\n  const auth = firebase.auth();\r\n  const [user, loading] = useAuthState(auth);\r\n  return (\r\n    <NavBar>\r\n      <Wrapper>\r\n        <NavigationContainer>\r\n          <Logo to=\"/room/general\">Chat App</Logo>\r\n          {user && !loading ? <SignOut auth={auth} /> : <SignIn auth={auth} />}\r\n        </NavigationContainer>\r\n      </Wrapper>\r\n    </NavBar>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import styled from \"styled-components\";\r\n\r\nconst Container = styled.section`\r\n  display: grid;\r\n  margin: 0 auto;\r\n  margin-top: 20vh;\r\n  padding: 32px;\r\n  text-align: center;\r\n  width: 40%;\r\n  justify-items: center;\r\n  background-color: ${({ theme }) => theme.color.shark};\r\n  border-radius: 15px;\r\n  @media (max-width: 1024px) {\r\n    width: unset;\r\n    padding: 18px;\r\n    max-width: 80%;\r\n  }\r\n`;\r\nconst Header = styled.h2`\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  line-height: 140%;\r\n`;\r\nconst Paragraph = styled.p`\r\n  margin-top: 22px;\r\n  font-size: 22px;\r\n  line-height: 140%;\r\n`;\r\n\r\nexport { Container, Header, Paragraph };\r\n","import { useDispatch } from \"react-redux\";\r\nimport { setTestUser } from \"../../../userSlice\";\r\nimport Button from \"../../Button\";\r\nimport SignIn from \"../../SignIn\";\r\nimport { Container, Header } from \"./styled\";\r\n\r\nconst LoginPrompt = ({ auth }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        Hi !<br></br> Looks like you are not logged in.\r\n      </Header>\r\n      <SignIn auth={auth}></SignIn>\r\n      <Button\r\n        marginTop\r\n        plain\r\n        onClick={() => {\r\n          dispatch(setTestUser());\r\n        }}\r\n      >\r\n        Sign in with test account\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\nexport default LoginPrompt;\r\n","import { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { selectUser } from \"../../userSlice\";\r\nimport Navigation from \"../Navigation\";\r\nimport LoginPrompt from \"./LoginPropmt\";\r\n\r\nconst LoginPage = ({ auth }) => {\r\n  const storeUser = useSelector(selectUser);\r\n  if (storeUser) {\r\n    return <Redirect to=\"/room/general\"></Redirect>;\r\n  }\r\n  return (\r\n    <>\r\n      <Navigation></Navigation>\r\n      <LoginPrompt auth={auth}></LoginPrompt>\r\n    </>\r\n  );\r\n};\r\nexport default LoginPage;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Container = styled.div``;\r\n\r\nconst Header = styled.header`\r\n  font-family: \"Noto Sans JP\", sans-serif;\r\n  font-size: 22px;\r\n  line-height: 130%;\r\n  margin-top: 16px;\r\n`;\r\nconst ChatroomsContainer = styled.div`\r\n  display: grid;\r\n  grid-gap: 6px;\r\n  margin-top: 16px;\r\n`;\r\nconst Room = styled(Link)`\r\n  text-decoration: none;\r\n  font-family: \"Noto Sans JP\", sans-serif;\r\n  font-size: 18px;\r\n  line-height: 130%;\r\n  padding: 10px 16px;\r\n  border: none;\r\n  color: ${({ theme }) => theme.color.white};\r\n  background-color: ${({ theme }) => theme.color.charade};\r\n  border-radius: 15px;\r\n`;\r\n\r\nexport { Container, Room, Header, ChatroomsContainer };\r\n","import { Room } from \"./styled\";\r\n\r\nconst generateChatroom = (chatroom, currentUserId) => {\r\n  //checking if a chatroom should be displayed\r\n  // user needs to be a member or the chat should be public\r\n  if (\r\n    (chatroom.members &&\r\n      chatroom.members.some((item) => item === currentUserId)) ||\r\n    !chatroom.private\r\n  ) {\r\n    return (\r\n      <Room to={`/room/${chatroom.ref}`} key={`${chatroom.ref}`}>\r\n        {chatroom.title}\r\n      </Room>\r\n    );\r\n  }\r\n  return null;\r\n};\r\nexport default generateChatroom;\r\n","import { nanoid } from \"nanoid\";\r\nimport { useState } from \"react\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { selectUser } from \"../../userSlice\";\r\nimport generateChatroom from \"./generateChatroom\";\r\nimport { Container, Header, ChatroomsContainer } from \"./styled\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst Menu = ({ firestore }) => {\r\n  const storeUser = useSelector(selectUser);\r\n  const { roomRef } = useParams();\r\n  const chatroomsRef = firestore.collection(\"chatrooms\");\r\n  const [chatrooms] = useCollectionData(chatroomsRef);\r\n  const [titleInput, setTitleInput] = useState(\"\");\r\n\r\n  const currentRoom = chatrooms\r\n    ? chatrooms.find((chatroom) => roomRef === chatroom.ref)\r\n    : null;\r\n  const currentUserId = storeUser ? storeUser.uid : null;\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const ref = nanoid();\r\n    const members = [currentUserId];\r\n    try {\r\n      if (titleInput.trim() !== \"\") {\r\n        chatroomsRef.doc(ref).set({\r\n          createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n          title: titleInput,\r\n          creator: currentUserId,\r\n          ref: ref,\r\n          private: false,\r\n          members: members,\r\n        });\r\n        setTitleInput(\"\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  const onTitleInputChange = (e) => {\r\n    setTitleInput(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <p>Formularz do dodawania czatów do wyrzucenia do popup'u</p>\r\n      <form onSubmit={onFormSubmit}>\r\n        <input\r\n          placeholder=\"Tytuł czatu\"\r\n          value={titleInput}\r\n          onChange={onTitleInputChange}\r\n        ></input>\r\n        <button>Add a new room</button>\r\n      </form>\r\n      <Header>Chatrooms:</Header>\r\n      <ChatroomsContainer>\r\n        {chatrooms\r\n          ? chatrooms.map((chatroom) =>\r\n              generateChatroom(chatroom, currentUserId)\r\n            )\r\n          : \"\"}\r\n      </ChatroomsContainer>\r\n    </Container>\r\n  );\r\n};\r\nexport default Menu;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  font-family: \"Noto Sans JP\", sans-serif;\r\n  margin-top: 30px;\r\n  text-align: center;\r\n  font-weight: 500;\r\n  font-size: 26px;\r\n  line-height: 20px;\r\n  &:first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\nconst RelativeDiv = styled.div`\r\n  max-width: 100%;\r\n  position: relative;\r\n`;\r\nconst MessagesList = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0px;\r\n  padding: 16px;\r\n`;\r\nconst Message = styled.li`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  margin-top: 16px;\r\n  ${({ isAuthor }) =>\r\n    isAuthor &&\r\n    css`\r\n      flex-direction: row-reverse;\r\n    `}\r\n`;\r\nconst MessageAuthorName = styled.p`\r\n  font-size: 13px;\r\n  position: absolute;\r\n  transform: translateY(-39px) translateX(-5px);\r\n  color: ${({ theme }) => theme.color.midGray};\r\n`;\r\nconst AuthorAvatar = styled.img`\r\n  width: 45px;\r\n  border-radius: 50%;\r\n  align-self: flex-start;\r\n  transform: translateY(-10px);\r\n  ${({ isAuthor }) =>\r\n    isAuthor &&\r\n    css`\r\n      transform: translateY(20px);\r\n    `};\r\n`;\r\nconst MessageText = styled.p`\r\n  position: relative;\r\n  font-size: 15px;\r\n  line-height: 140%;\r\n  background-color: #1c1c24;\r\n  padding: 8px 12px;\r\n  margin: 0 8px;\r\n  border-radius: 10px;\r\n  border-top-left-radius: 0;\r\n  ${({ isAuthor }) =>\r\n    isAuthor &&\r\n    css`\r\n      background-color: #4447e2;\r\n      border-top-left-radius: 10px;\r\n      border-bottom-right-radius: 0;\r\n    `}\r\n`;\r\nconst MessageTime = styled.div`\r\n  font-size: 12px;\r\n  text-align: center;\r\n  flex-grow: 0;\r\n  color: #ccc;\r\n  margin: 0 8px;\r\n`;\r\nconst MessageForm = styled.form`\r\n  width: calc(1220px - 300px);\r\n  max-width: 1220px;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  display: flex;\r\n  position: fixed;\r\n  bottom: 0;\r\n  @media (max-width: 1200px) {\r\n    width: calc(100% - 332px);\r\n  }\r\n`;\r\nconst FormInput = styled.input`\r\n  font-family: \"Roboto\", sans-serif;\r\n  padding: 12px;\r\n  flex-grow: 1;\r\n  font-size: 16px;\r\n  color: #ddd;\r\n  background-color: #222;\r\n  border-radius: 0;\r\n  border: none;\r\n  &::placeholder {\r\n  }\r\n  &:focus {\r\n    border: none;\r\n    outline: none;\r\n    background-color: #333;\r\n  }\r\n`;\r\nconst FormSubmit = styled.button`\r\n  padding: 12px 20px;\r\n  font-size: 26px;\r\n  background-color: #333;\r\n  border: none;\r\n  color: white;\r\n`;\r\nexport {\r\n  RelativeDiv,\r\n  FormSubmit,\r\n  FormInput,\r\n  MessagesList,\r\n  AuthorAvatar,\r\n  Message,\r\n  MessageAuthorName,\r\n  MessageText,\r\n  MessageTime,\r\n  MessageForm,\r\n  Header,\r\n};\r\n","const generateInitialMessage = (currentRoom) => {\r\n  return {\r\n    text: `Hello ! This is a beginning of the #${\r\n      currentRoom && currentRoom.title\r\n    } channel`,\r\n  };\r\n};\r\nexport default generateInitialMessage;\r\n//function that generates a message for an empty chatRoom\r\n","import {\r\n  AuthorAvatar,\r\n  Message,\r\n  MessageAuthorName,\r\n  MessageText,\r\n  MessageTime,\r\n} from \"./styled\";\r\n\r\nconst generateMessage = (message, currentUser) => {\r\n  const isAuthor = message.uid === currentUser.uid;\r\n  let name;\r\n  name = message.authorName ? message.authorName : null;\r\n  console.log(name);\r\n  return (\r\n    <Message isAuthor={isAuthor} key={`${message.id}${message.uid}`}>\r\n      <AuthorAvatar\r\n        isAuthor={isAuthor}\r\n        alt={\"avatar\"}\r\n        src={message.photoURL}\r\n      ></AuthorAvatar>\r\n\r\n      <MessageText isAuthor={isAuthor}>\r\n        <MessageAuthorName>{name}</MessageAuthorName>\r\n        {message.text}\r\n      </MessageText>\r\n      <MessageTime>\r\n        {message.createdAt\r\n          ? `${new Date(message.createdAt.seconds * 1000).toLocaleTimeString()}\r\n                     ${new Date(\r\n                       message.createdAt.seconds * 1000\r\n                     ).toLocaleDateString()}`\r\n          : ``}\r\n      </MessageTime>\r\n    </Message>\r\n  );\r\n};\r\nexport default generateMessage;\r\n//function that generates a message and displays it depending on whether the currentUser is author\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport {\r\n  FormSubmit,\r\n  FormInput,\r\n  Message,\r\n  MessageForm,\r\n  MessagesList,\r\n  MessageText,\r\n  RelativeDiv,\r\n  Header,\r\n} from \"./styled\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../../userSlice\";\r\nimport generateInitialMessage from \"./generateInitialMessage\";\r\nimport generateMessage from \"./generateMessage\";\r\n\r\nconst ChatRoom = ({ firebase }) => {\r\n  const storeUser = useSelector(selectUser);\r\n  const firestore = firebase.firestore();\r\n  const { roomRef } = useParams();\r\n  const chatroomsRef = firestore.collection(\"chatrooms\");\r\n  const messagesRef = chatroomsRef.doc(roomRef).collection(\"messages\");\r\n  const [chatrooms] = useCollectionData(chatroomsRef);\r\n  const getMessagesByTime = messagesRef.orderBy(\"createdAt\");\r\n  const [messages] = useCollectionData(getMessagesByTime);\r\n  const currentRoom = chatrooms\r\n    ? chatrooms.find((chatroom) => roomRef === chatroom.ref)\r\n    : null;\r\n  const initialMessage = generateInitialMessage(currentRoom);\r\n  const dummy = useRef();\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const onInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!!dummy.current) {\r\n      dummy.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [messages]);\r\n\r\n  const onFormSubmit = async (e) => {\r\n    //on the form submit the new message is being pushed to the room you are currently in\r\n    e.preventDefault();\r\n    const { uid, photoURL } = storeUser;\r\n    if (input.trim() !== \"\") {\r\n      await messagesRef.add({\r\n        text: input,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        uid,\r\n        photoURL,\r\n        authorName: storeUser.displayName,\r\n      });\r\n      setInput(\"\");\r\n    }\r\n    if (!!dummy.current) {\r\n      dummy.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    storeUser && (\r\n      <RelativeDiv>\r\n        <Header># {currentRoom ? currentRoom.title : \"\"}</Header>\r\n        <MessagesList>\r\n          {messages && !!messages.length ? (\r\n            messages.map((message) => generateMessage(message, storeUser))\r\n          ) : (\r\n            <Message isAuthor={false}>\r\n              <MessageText>{initialMessage.text}</MessageText>\r\n            </Message>\r\n          )}\r\n          <div ref={dummy}></div>\r\n        </MessagesList>\r\n        <MessageForm onSubmit={onFormSubmit}>\r\n          <FormInput\r\n            placeholder={\"Write a message here\"}\r\n            value={input}\r\n            onChange={onInputChange}\r\n          />\r\n          <FormSubmit>⬆️</FormSubmit>\r\n        </MessageForm>\r\n      </RelativeDiv>\r\n    )\r\n  );\r\n};\r\nexport default ChatRoom;\r\n","import styled from \"styled-components\";\r\n\r\nconst GridContainer = styled.div`\r\n  display: grid;\r\n  width: 100%;\r\n  grid-template-columns: 300px 1fr;\r\n`;\r\n\r\nexport { GridContainer };\r\n","import Menu from \"../Menu\";\r\nimport ChatRoom from \"../ChatRoom\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { GridContainer } from \"./styled\";\r\nimport { Wrapper } from \"../Wrapper\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../../userSlice\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst RoomPage = ({ firebase }) => {\r\n  const storeUser = useSelector(selectUser);\r\n  const firestore = firebase.firestore();\r\n  const auth = firebase.auth();\r\n  const [user] = useAuthState(auth);\r\n  if (!storeUser) {\r\n    return <Redirect to=\"/login\"></Redirect>;\r\n  }\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <GridContainer>\r\n          <Menu db={firebase} firestore={firestore} auth={auth}></Menu>\r\n          <ChatRoom\r\n            firebase={firebase}\r\n            user={user}\r\n            firestore={firestore}\r\n            auth={auth}\r\n          />\r\n        </GridContainer>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\nexport default RoomPage;\r\n","import firebase from \"firebase/app\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport Navigation from \"./components/Navigation\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectUser, setUser } from \"./userSlice\";\r\nimport RoomPage from \"./components/RoomPage\";\r\nimport { useEffect } from \"react\";\r\n\r\nfirebase.initializeApp({\r\n  apiKey: \"AIzaSyDWBkQjdvZjHIpip9Z1bm9IpDmzc1XxQmM\",\r\n  authDomain: \"react-firebase-chat-app-505e9.firebaseapp.com\",\r\n  databaseURL: \"https://react-firebase-chat-app-505e9.firebaseio.com\",\r\n  projectId: \"react-firebase-chat-app-505e9\",\r\n  storageBucket: \"react-firebase-chat-app-505e9.appspot.com\",\r\n  messagingSenderId: \"56873190707\",\r\n  appId: \"1:56873190707:web:ae292904dd7bcdb7542a46\",\r\n  measurementId: \"G-NKK3HT6H63\",\r\n});\r\n\r\nfunction App() {\r\n  const auth = firebase ? firebase.auth() : null;\r\n  const [user] = useAuthState(auth);\r\n  const dispatch = useDispatch();\r\n  const storeUser = useSelector(selectUser);\r\n  useEffect(() => {\r\n    if (!storeUser && user) {\r\n      const uid = user.uid;\r\n      const photoURL = user.photoURL;\r\n      const displayName = user.displayName;\r\n      const userInfo = { uid, photoURL, displayName };\r\n      dispatch(setUser({ userInfo }));\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Route path=\"/\">\r\n        <Redirect to=\"/room/general\" firebase={firebase}></Redirect>\r\n      </Route>\r\n      <Route path={`/room/:roomRef`}>\r\n        <Navigation firebase={firebase}></Navigation>\r\n        <RoomPage firebase={firebase}></RoomPage>\r\n      </Route>\r\n      <Route path=\"/login\">\r\n        <LoginPage auth={auth}></LoginPage>\r\n      </Route>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    *,*::before,*::after{\r\n    box-sizing:border-box;\r\n    }\r\n    body {\r\n    margin: 0;\r\n    color: ${({ theme }) => theme.color.white};\r\n    background-color: ${({ theme }) => theme.color.woodsmoke};\r\n    font-family: 'Roboto', sans-serif;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","const theme = {\r\n  color: {\r\n    charade: \"#2D2D3A\",\r\n    midGray: \"#5F5F6E\",\r\n    thunder: \"#231F20\",\r\n    shark: \"#1C1C24\",\r\n    woodsmoke: \"#131419\",\r\n    buttonBorder: \"#4447E2\",\r\n    white: \"#FFFFFF\",\r\n  },\r\n};\r\nexport default theme;\r\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport userReducer from \"./userSlice\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport App from \"./App\";\r\nimport GlobalStyle from \"./globalStyle\";\r\nimport theme from \"./theme\";\r\nimport store from \"./store\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyle />\r\n        <HashRouter>\r\n          <App />\r\n        </HashRouter>\r\n      </ThemeProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}