{"version":3,"sources":["components/Menu/styled.js","components/Menu/index.js","components/ChatRoom/styled.js","components/ChatRoom/index.js","components/Default/styled.js","components/Default/index.js","components/Navigation/styled.js","components/Button/styled.js","components/Button/index.js","components/SignOut/index.js","components/SignIn/index.js","components/Navigation/index.js","App.js","globalStyle.js","index.js"],"names":["Container","styled","div","StyledLink","Link","Title","p","Room","Menu","auth","firestore","db","roomRef","useParams","chatroomsRef","collection","useCollectionData","chatrooms","useState","titleInput","setTitleInput","find","chatroom","ref","onSubmit","e","preventDefault","nanoid","members","currentUser","uid","trim","doc","set","createdAt","FieldValue","serverTimestamp","title","creator","private","console","log","placeholder","value","onChange","target","map","some","item","to","RelativeDiv","MessagesList","ul","Message","li","isAuthor","AuthorAvatar","img","MessageText","MessageTime","MessageForm","form","FormInput","input","FormSubmit","button","ChatRoom","firebase","messagesRef","getMessagesByTime","orderBy","messages","currentRoom","setInput","useEffect","dummy","current","scrollIntoView","behavior","onFormSubmit","a","photoURL","add","text","useRef","currentUserId","message","className","id","alt","src","Date","seconds","toLocaleTimeString","toLocaleDateString","Wrapper","GridContainer","Default","useAuthState","user","NavBar","nav","Logo","h1","Button","children","onClick","SignOut","signOut","SignIn","provider","GoogleAuthProvider","signInWithPopup","Navigation","loading","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","path","exact","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"00BAEA,IAAMA,EAAYC,IAAOC,IAAV,KAETC,EAAaF,YAAOG,IAAPH,CAAH,KAKVI,EAAQJ,IAAOK,EAAV,KASLC,EAAON,IAAOC,IAAV,KCyDKM,EArEF,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,GACvBC,EAAYC,cAAZD,QACFE,EAAeJ,EAAUK,WAAW,aAFF,EAGpBC,YAAkBF,GAA/BG,EAHiC,sBAIJC,mBAAS,IAJL,mBAIjCC,EAJiC,KAIrBC,EAJqB,OAKAF,mBAAS,IALT,6BAOpBD,GAChBA,EAAUI,MAAK,SAACC,GAAD,OAAcV,IAAYU,EAASC,OA2BtD,OACE,eAACvB,EAAD,WACE,0FACA,uBAAMwB,SA3BW,SAACC,GACpBA,EAAEC,iBACF,IAAMH,EAAMI,cACNC,EAAU,CAACnB,EAAKoB,YAAYC,KAClC,IAC4B,KAAtBX,EAAWY,SACbjB,EAAakB,IAAIT,GAAKU,IAAI,CACxBC,UAAWvB,EAAGD,UAAUyB,WAAWC,kBACnCC,MAAOlB,EACPmB,QAAS7B,EAAKoB,YAAYC,IAC1BP,IAAKA,EACLgB,SAAS,EACTX,QAASA,IAEXR,EAAc,KAEhB,MAAOK,GACPe,QAAQC,IAAIhB,KAUZ,UACE,uBACEiB,YAAY,mBACZC,MAAOxB,EACPyB,SAXmB,SAACnB,GAC1BL,EAAcK,EAAEoB,OAAOF,UAYnB,uDAEF,4CACC1B,EACGA,EAAU6B,KAAI,SAACxB,GACb,OACEA,EAASM,QAAQmB,MACf,SAACC,GAAD,OACEA,IAASvC,EAAKoB,YAAYC,MAA4B,IAArBR,EAASiB,WAI5C,cAACpC,EAAD,CAAY8C,GAAE,WAAM3B,EAASC,KAA7B,SACE,cAAChB,EAAD,UACE,cAACF,EAAD,UAAQiB,EAASe,SADnB,UAAcf,EAASC,QAMtB,QAET,O,4tDCrEV,IAAM2B,EAAcjD,IAAOC,IAAV,KAGXiD,EAAelD,IAAOmD,GAAV,KAOZC,EAAUpD,IAAOqD,GAAV,KAKO,qBAAGC,SAA2B,cAAgB,WAE5DC,EAAevD,IAAOwD,IAAV,KAKZC,EAAczD,IAAOK,EAAV,KAOXqD,EAAc1D,IAAOC,IAAV,KAOX0D,EAAc3D,IAAO4D,KAAV,KAYXC,EAAY7D,IAAO8D,MAAV,KAiBTC,EAAa/D,IAAOgE,OAAV,KCkCDC,EArFE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACZzD,EAAYyD,EAASzD,YACrBD,EAAO0D,EAAS1D,OACdG,EAAYC,cAAZD,QACFE,EAAeJ,EAAUK,WAAW,aACpCqD,EAActD,EAAakB,IAAIpB,GAASG,WAAW,YALxB,EAMbC,YAAkBF,GAA/BG,EAN0B,oBAO3BoD,EAAoBD,EAAYE,QAAQ,aAPb,EAQdtD,YAAkBqD,GAA9BE,EAR0B,oBAS3BC,EAAcvD,EAChBA,EAAUI,MAAK,SAACC,GAAD,OAAcV,IAAYU,EAASC,OAClD,KAX6B,EAePL,mBAAS,IAfF,mBAe1B6C,EAf0B,KAenBU,EAfmB,KAmBjCC,qBAAU,WACFC,EAAMC,SACVD,EAAMC,QAAQC,eAAe,CAAEC,SAAU,aAE1C,CAACP,IACJ,IAAMQ,EAAY,uCAAG,WAAOtD,GAAP,mBAAAuD,EAAA,yDACnBvD,EAAEC,iBADiB,EAEOjB,EAAKoB,YAAvBC,EAFW,EAEXA,IAAKmD,EAFM,EAENA,SACQ,KAAjBlB,EAAMhC,OAHS,gCAIXqC,EAAYc,IAAI,CACpBC,KAAMpB,EACN7B,UAAWiC,EAASzD,UAAUyB,WAAWC,kBACzCN,MACAmD,aARe,OAUjBR,EAAS,IAVQ,OAYbE,EAAMC,SACVD,EAAMC,QAAQC,eAAe,CAAEC,SAAU,WAbxB,2CAAH,sDAgBZH,EAAQS,mBACRC,EAAgB5E,EAAKoB,YAAcpB,EAAKoB,YAAYC,IAAM,KAChE,OACErB,GACE,eAACyC,EAAD,WACE,wCAAWsB,EAAcA,EAAYnC,MAAQ,MAC7C,eAACc,EAAD,WACGoB,GACCA,EAASzB,KAAI,SAACwC,GAAD,OACX,eAACjC,EAAD,CACEE,SAAU+B,EAAQxD,MAAQuD,EAE1BE,UAAWD,EAAQE,GAHrB,UAKE,cAAChC,EAAD,CACEiC,IAAK,SACLC,IAAKJ,EAAQL,WAEf,cAACvB,EAAD,UAAc4B,EAAQH,OACtB,cAACxB,EAAD,UACG2B,EAAQpD,UAAR,UACM,IAAIyD,KACuB,IAA5BL,EAAQpD,UAAU0D,SAClBC,qBAHL,kCAII,IAAIF,KACwB,IAA5BL,EAAQpD,UAAU0D,SAClBE,sBANJ,OATEnE,kBAoBX,qBAAKJ,IAAKoD,OAEZ,eAACf,EAAD,CAAapC,SAAUuD,EAAvB,UACE,cAACjB,EAAD,CACEpB,YAAa,uBACbC,MAAOoB,EACPnB,SA7DY,SAACnB,GACrBgD,EAAShD,EAAEoB,OAAOF,UA8DZ,cAACqB,EAAD,kC,sRC7FV,IAAM+B,EAAU9F,IAAOC,IAAV,KAKP8F,EAAgB/F,IAAOC,IAAV,KCiBJ+F,EAnBC,SAAC,GAAkB,IAAhB9B,EAAe,EAAfA,SACXzD,EAAYyD,EAASzD,YACrBD,EAAO0D,EAAS1D,OAFU,EAGjByF,YAAazF,GAArB0F,EAHyB,oBAIhC,OACE,mCACE,cAACJ,EAAD,UACE,eAACC,EAAD,WACE,cAAC,EAAD,CAAMrF,GAAIwD,EAAUzD,UAAWA,EAAWD,KAAMA,IAC/C0F,EACC,cAAC,EAAD,CAAUhC,SAAUA,EAAUzD,UAAWA,EAAWD,KAAMA,IAE1D,W,ujBCdZ,IAAMN,GAAaF,YAAOG,IAAPH,CAAH,MAGVmG,GAASnG,IAAOoG,IAAV,MASNC,GAAOrG,IAAOsG,GAAV,K,kPCbKtG,WAAOgE,OAAtB,MCIeuC,GAHA,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC1B,OAAO,cAAC,GAAD,CAAcA,QAASA,EAAvB,SAAiCD,KCK3BE,GALC,SAAC,GAAc,IAAZlG,EAAW,EAAXA,KACjB,OACEA,EAAKoB,aAAe,cAAC,GAAD,CAAQ6E,QAAS,kBAAMjG,EAAKmG,WAA5B,uBCOTC,GAPA,SAAC,GAAc,IAAZpG,EAAW,EAAXA,KAKhB,OAAO,cAAC,GAAD,CAAQiG,QAJU,WACvB,IAAMI,EAAW,IAAI3C,IAAS1D,KAAKsG,mBACnCtG,EAAKuG,gBAAgBF,IAEhB,kCCQMG,GAbI,SAAC,GAAkB,IAC9BxG,EAD6B,EAAf0D,SACE1D,OADa,EAEXyF,YAAazF,GAFF,mBAE5B0F,EAF4B,KAEtBe,EAFsB,KAGnC,OACE,eAACd,GAAD,WACE,cAAC,GAAD,CAAYnD,GAAG,WAAf,SACE,cAACqD,GAAD,yBAEDH,IAASe,EAAU,cAAC,GAAD,CAASzG,KAAMA,IAAW,cAAC,GAAD,CAAQA,KAAMA,QCNlE0D,IAASgD,cAAc,CACrBC,OAAQ,0CACRC,WAAY,gDACZC,YAAa,uDACbC,UAAW,gCACXC,cAAe,4CACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAkBFC,OAff,WAEE,OADazD,KAAWA,IAAS1D,OAE/B,eAAC,IAAD,WACE,eAAC,IAAD,CAAOoH,KAAI,YAAX,UACE,cAAC,GAAD,CAAY1D,SAAUA,MACtB,cAAC,EAAD,CAASA,SAAUA,SAErB,cAAC,IAAD,CAAO0D,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,IAAD,CAAU7E,GAAG,WAAWkB,SAAUA,Y,mQC1B1C,IAYe4D,GAZKC,YAAH,MCGjBC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,GAAD,IACA,cAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.e481b6f6.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Container = styled.div``;\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: #ccc;\r\n  width: 100%;\r\n`;\r\nconst Title = styled.p`\r\n  margin: 0;\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-size: 18px;\r\n  &::before {\r\n    content: \"#\";\r\n    font-size: 20px;\r\n  }\r\n`;\r\nconst Room = styled.div`\r\n  width: 100%;\r\n  padding: 8px 12px;\r\n  border: 1px solid #eee;\r\n  border-radius: 8px;\r\n  margin: 4px 0;\r\n`;\r\n\r\nexport { Container, StyledLink, Room, Title };\r\n","import { nanoid } from \"nanoid\";\r\nimport { useState } from \"react\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Container, Room, StyledLink, Title } from \"./styled\";\r\n\r\nconst Menu = ({ auth, firestore, db }) => {\r\n  const { roomRef } = useParams();\r\n  const chatroomsRef = firestore.collection(\"chatrooms\");\r\n  const [chatrooms] = useCollectionData(chatroomsRef);\r\n  const [titleInput, setTitleInput] = useState(\"\");\r\n  const [membersInput, setMembersInput] = useState(\"\");\r\n\r\n  const currentRoom = chatrooms\r\n    ? chatrooms.find((chatroom) => roomRef === chatroom.ref)\r\n    : null;\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const ref = nanoid();\r\n    const members = [auth.currentUser.uid];\r\n    try {\r\n      if (titleInput.trim() !== \"\") {\r\n        chatroomsRef.doc(ref).set({\r\n          createdAt: db.firestore.FieldValue.serverTimestamp(),\r\n          title: titleInput,\r\n          creator: auth.currentUser.uid,\r\n          ref: ref,\r\n          private: false,\r\n          members: members,\r\n        });\r\n        setTitleInput(\"\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  const onTitleInputChange = (e) => {\r\n    setTitleInput(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <p>Formularz do dodawania czatów do wyrzucenia do popup'u</p>\r\n      <form onSubmit={onFormSubmit}>\r\n        <input\r\n          placeholder=\"Tytuł czatu\"\r\n          value={titleInput}\r\n          onChange={onTitleInputChange}\r\n        ></input>\r\n        <button>Add a new room</button>\r\n      </form>\r\n      <h2>Chatrooms:</h2>\r\n      {chatrooms\r\n        ? chatrooms.map((chatroom) => {\r\n            if (\r\n              chatroom.members.some(\r\n                (item) =>\r\n                  item === auth.currentUser.uid || chatroom.private === false\r\n              )\r\n            ) {\r\n              return (\r\n                <StyledLink to={`/${chatroom.ref}`}>\r\n                  <Room key={`${chatroom.ref}`}>\r\n                    <Title>{chatroom.title}</Title>\r\n                  </Room>\r\n                </StyledLink>\r\n              );\r\n            }\r\n            return null;\r\n          })\r\n        : \"\"}\r\n    </Container>\r\n  );\r\n};\r\nexport default Menu;\r\n","import styled from \"styled-components\";\r\n\r\nconst RelativeDiv = styled.div`\r\n  position: relative;\r\n`;\r\nconst MessagesList = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0px;\r\n  padding: 16px;\r\n`;\r\nconst Message = styled.li`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  margin: 8px 0;\r\n  flex-direction: ${({ isAuthor }) => (isAuthor ? \"row-reverse\" : \"unset\")};\r\n`;\r\nconst AuthorAvatar = styled.img`\r\n  width: 45px;\r\n  border-radius: 50%;\r\n  align-self: flex-start;\r\n`;\r\nconst MessageText = styled.p`\r\n  font-size: 18px;\r\n  background-color: #444;\r\n  padding: 8px 12px;\r\n  margin: 0 8px;\r\n  border-radius: 10px;\r\n`;\r\nconst MessageTime = styled.div`\r\n  font-size: 14px;\r\n  text-align: center;\r\n  flex-grow: 0;\r\n  color: #ccc;\r\n  margin: 0 8px;\r\n`;\r\nconst MessageForm = styled.form`\r\n  width: calc(1200px - 300px);\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  display: flex;\r\n  position: fixed;\r\n  bottom: 0;\r\n  @media (max-width: 1200px) {\r\n    width: calc(100% - 300px);\r\n  }\r\n`;\r\nconst FormInput = styled.input`\r\n  font-family: \"Roboto\", sans-serif;\r\n  padding: 12px;\r\n  flex-grow: 1;\r\n  font-size: 16px;\r\n  color: #ddd;\r\n  background-color: #222;\r\n  border-radius: 0;\r\n  border: none;\r\n  &::placeholder {\r\n  }\r\n  &:focus {\r\n    border: none;\r\n    outline: none;\r\n    background-color: #333;\r\n  }\r\n`;\r\nconst FormSubmit = styled.button`\r\n  padding: 12px 20px;\r\n  font-size: 26px;\r\n  background-color: #333;\r\n  border: none;\r\n  color: white;\r\n`;\r\nexport {\r\n  RelativeDiv,\r\n  FormSubmit,\r\n  FormInput,\r\n  MessagesList,\r\n  AuthorAvatar,\r\n  Message,\r\n  MessageText,\r\n  MessageTime,\r\n  MessageForm,\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport {\r\n  AuthorAvatar,\r\n  FormSubmit,\r\n  FormInput,\r\n  Message,\r\n  MessageForm,\r\n  MessagesList,\r\n  MessageText,\r\n  MessageTime,\r\n  RelativeDiv,\r\n} from \"./styled\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst ChatRoom = ({ firebase }) => {\r\n  const firestore = firebase.firestore();\r\n  const auth = firebase.auth();\r\n  const { roomRef } = useParams();\r\n  const chatroomsRef = firestore.collection(\"chatrooms\");\r\n  const messagesRef = chatroomsRef.doc(roomRef).collection(\"messages\");\r\n  const [chatrooms] = useCollectionData(chatroomsRef);\r\n  const getMessagesByTime = messagesRef.orderBy(\"createdAt\");\r\n  const [messages] = useCollectionData(getMessagesByTime);\r\n  const currentRoom = chatrooms\r\n    ? chatrooms.find((chatroom) => roomRef === chatroom.ref)\r\n    : null;\r\n\r\n  // ----------------------------------------------------\r\n\r\n  const [input, setInput] = useState(\"\");\r\n  const onInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n  useEffect(() => {\r\n    if (!!dummy.current) {\r\n      dummy.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [messages]);\r\n  const onFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { uid, photoURL } = auth.currentUser;\r\n    if (input.trim() !== \"\") {\r\n      await messagesRef.add({\r\n        text: input,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        uid,\r\n        photoURL,\r\n      });\r\n      setInput(\"\");\r\n    }\r\n    if (!!dummy.current) {\r\n      dummy.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n  const dummy = useRef();\r\n  const currentUserId = auth.currentUser ? auth.currentUser.uid : null;\r\n  return (\r\n    auth && (\r\n      <RelativeDiv>\r\n        <h1>Room: {currentRoom ? currentRoom.title : \"\"}</h1>\r\n        <MessagesList>\r\n          {messages &&\r\n            messages.map((message) => (\r\n              <Message\r\n                isAuthor={message.uid === currentUserId}\r\n                key={nanoid()}\r\n                className={message.id}\r\n              >\r\n                <AuthorAvatar\r\n                  alt={\"avatar\"}\r\n                  src={message.photoURL}\r\n                ></AuthorAvatar>\r\n                <MessageText>{message.text}</MessageText>\r\n                <MessageTime>\r\n                  {message.createdAt\r\n                    ? `${new Date(\r\n                        message.createdAt.seconds * 1000\r\n                      ).toLocaleTimeString()}\r\n                     ${new Date(\r\n                       message.createdAt.seconds * 1000\r\n                     ).toLocaleDateString()}`\r\n                    : ``}\r\n                </MessageTime>\r\n              </Message>\r\n            ))}\r\n          <div ref={dummy}></div>\r\n        </MessagesList>\r\n        <MessageForm onSubmit={onFormSubmit}>\r\n          <FormInput\r\n            placeholder={\"Write a message here\"}\r\n            value={input}\r\n            onChange={onInputChange}\r\n          />\r\n          <FormSubmit>⬆️</FormSubmit>\r\n        </MessageForm>\r\n      </RelativeDiv>\r\n    )\r\n  );\r\n};\r\nexport default ChatRoom;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n`;\r\nconst GridContainer = styled.div`\r\n  display: grid;\r\n  width: 100%;\r\n  grid-template-columns: 300px 1fr;\r\n`;\r\n\r\nexport { GridContainer, Wrapper };\r\n","import Menu from \"../Menu\";\r\nimport ChatRoom from \"../ChatRoom\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { GridContainer, Wrapper } from \"./styled\";\r\n\r\nconst Default = ({ firebase }) => {\r\n  const firestore = firebase.firestore();\r\n  const auth = firebase.auth();\r\n  const [user] = useAuthState(auth);\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <GridContainer>\r\n          <Menu db={firebase} firestore={firestore} auth={auth}></Menu>\r\n          {user ? (\r\n            <ChatRoom firebase={firebase} firestore={firestore} auth={auth} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </GridContainer>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\nexport default Default;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n`;\r\nconst NavBar = styled.nav`\r\n  width: 100%;\r\n  max-width: 1200px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 0 auto;\r\n  box-shadow: 0 0px 5px rgba(255, 255, 255, 0.6);\r\n`;\r\nconst Logo = styled.h1`\r\n  margin: 0 12px;\r\n  font-family: \"Sansita Swashed\", cursive;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  color: #eee;\r\n  padding: 12px;\r\n`;\r\n\r\nexport { NavBar, Logo, StyledLink };\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.button`\r\n  background-color: blue;\r\n  outline: none;\r\n  color: white;\r\n  font-size: 18px;\r\n  padding: 10px 20px;\r\n  margin-right: 12px;\r\n  border: none;\r\n  border-radius: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport StyledButton from \"./styled\";\r\n\r\nconst Button = ({ children, onClick }) => {\r\n  return <StyledButton onClick={onClick}>{children}</StyledButton>;\r\n};\r\nexport default Button;\r\n","import React from \"react\";\r\nimport \"firebase/auth\";\r\nimport Button from \"../Button\";\r\n\r\nconst SignOut = ({ auth }) => {\r\n  return (\r\n    auth.currentUser && <Button onClick={() => auth.signOut()}>Sign out</Button>\r\n  );\r\n};\r\nexport default SignOut;\r\n","import React from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport Button from \"../Button\";\r\n\r\nconst SignIn = ({ auth }) => {\r\n  const signInWithGoogle = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    auth.signInWithPopup(provider);\r\n  };\r\n  return <Button onClick={signInWithGoogle}>Sign in with Google</Button>;\r\n};\r\nexport default SignIn;\r\n","import React from \"react\";\r\nimport { NavBar, Logo, StyledLink } from \"./styled.js\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport SignOut from \"../SignOut\";\r\nimport SignIn from \"../SignIn\";\r\n\r\nconst Navigation = ({ firebase }) => {\r\n  const auth = firebase.auth();\r\n  const [user, loading] = useAuthState(auth);\r\n  return (\r\n    <NavBar>\r\n      <StyledLink to=\"/general\">\r\n        <Logo>Chat App</Logo>\r\n      </StyledLink>\r\n      {user && !loading ? <SignOut auth={auth} /> : <SignIn auth={auth} />}\r\n    </NavBar>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport Default from \"./components/Default\";\r\nimport { HashRouter, Redirect, Route } from \"react-router-dom\";\r\nimport ChatRoom from \"./components/ChatRoom\";\r\nimport Navigation from \"./components/Navigation\";\r\n\r\nfirebase.initializeApp({\r\n  apiKey: \"AIzaSyDWBkQjdvZjHIpip9Z1bm9IpDmzc1XxQmM\",\r\n  authDomain: \"react-firebase-chat-app-505e9.firebaseapp.com\",\r\n  databaseURL: \"https://react-firebase-chat-app-505e9.firebaseio.com\",\r\n  projectId: \"react-firebase-chat-app-505e9\",\r\n  storageBucket: \"react-firebase-chat-app-505e9.appspot.com\",\r\n  messagingSenderId: \"56873190707\",\r\n  appId: \"1:56873190707:web:ae292904dd7bcdb7542a46\",\r\n  measurementId: \"G-NKK3HT6H63\",\r\n});\r\n\r\nfunction App() {\r\n  const auth = firebase ? firebase.auth() : null;\r\n  return (\r\n    <HashRouter>\r\n      <Route path={`/:roomRef`}>\r\n        <Navigation firebase={firebase}></Navigation>\r\n        <Default firebase={firebase}></Default>\r\n      </Route>\r\n      <Route path=\"/\" exact>\r\n        <Redirect to=\"/general\" firebase={firebase}></Redirect>\r\n      </Route>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    *,*::before,*::after{\r\n    box-sizing:border-box;\r\n    }\r\n    body {\r\n    margin: 0;\r\n    color: white;\r\n    background-color: black;\r\n    font-family: 'Roboto', sans-serif;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport GlobalStyle from \"./globalStyle\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalStyle />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}